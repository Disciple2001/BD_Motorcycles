{"version":3,"file":"main.js","sources":["../../main.js"],"sourcesContent":["const { app, BrowserWindow, ipcMain, dialog  } = require('electron/main')\r\nconst path = require('node:path')\r\nrequire('./database')\r\nconst {getConnection} = require('./database')\r\n\r\nprocess.env.APP_ROOT = path.join(__dirname)\r\n\r\n// console.log(__dirname)\r\n\r\nprocess.env.VITE_PUBLIC = path.join(process.env.APP_ROOT, 'public')\r\n\r\nfunction sayHello  (event, nombre) {\r\n    console.log(`hello ${nombre}`);\r\n}\r\n\r\nasync function getMarcas(){\r\n    try{\r\n        const conn = getConnection()\r\n        const marcas = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Marca\"\r\n        ORDER BY id_marca DESC\r\n        `\r\n        return marcas\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getMarca(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const marca = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Marca\"\r\n        WHERE id_marca = ${id}\r\n        `\r\n        console.log(marca)\r\n        console.log(marca[0].nom_marca)\r\n        return marca\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateMarca(event, id, marca){\r\n    try{\r\n        const conn = getConnection()\r\n        const marcaa = await conn`\r\n        UPDATE \"Marca\"\r\n        SET nom_marca = ${marca.nom_marca}\r\n        WHERE id_marca = ${id} \r\n        RETURNING nom_marca\r\n        `\r\n        return marcaa\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteMarca(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const marca = await conn`\r\n        DELETE FROM \"Marca\"\r\n        WHERE id_marca = ${id} \r\n        returning nom_marca\r\n        `\r\n        return marca\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createMarca(event, marca){\r\n    console.log(\"SI llego\")\r\n    try{\r\n        const conn = getConnection()\r\n        const marcaa = await conn`INSERT INTO \"Marca\" (\"nom_marca\") VALUES(${marca.nom_marca}) RETURNING nom_marca`\r\n        console.log(marcaa)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function handleFileOpen () {\r\n    const { canceled, filePaths } = await dialog.showOpenDialog()\r\n    if (!canceled) {\r\n        return filePaths[0]\r\n    }\r\n}\r\nfunction hello() {\r\n    console.log(\"hello world\");\r\n}\r\n\r\nfunction handleSetTitle (event, title) {\r\n    const webContents = event.sender\r\n    const win = BrowserWindow.fromWebContents(webContents)\r\n    win.setTitle(title)\r\n}\r\n\r\n//Rol services\r\nasync function getRoles(){\r\n    try{\r\n        const conn = getConnection()\r\n        const roles = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Rol\"\r\n        ORDER BY id_rol DESC\r\n        `\r\n        return roles\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getRol(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const rol = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Rol\"\r\n        WHERE id_rol = ${id}\r\n        `\r\n        console.log(rol)\r\n        console.log(rol[0].nom_marca)\r\n        return rol\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateRol(event, id, rol){\r\n    try{\r\n        const conn = getConnection()\r\n        const rolAA = await conn`\r\n        UPDATE \"Rol\"\r\n        SET nom_rol = ${rol.nom_rol}\r\n        WHERE id_rol = ${id} \r\n        RETURNING nom_rol\r\n        `\r\n        return rolAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteRol(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const rol = await conn`\r\n        DELETE FROM \"Rol\"\r\n        WHERE id_rol = ${id} \r\n        returning nom_rol\r\n        `\r\n        return rol\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createRol(event, rol){\r\n    console.log(\"SI llego\")\r\n    try{\r\n        const conn = getConnection()\r\n        const rolAA = await conn`INSERT INTO \"Rol\" (\"nom_rol\") VALUES(${rol.nom_rol}) RETURNING nom_rol`\r\n        console.log(rolAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n//Municipio services\r\nasync function getMunicipios(){\r\n    try{\r\n        const conn = getConnection()\r\n        const municipios = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Municipio\"\r\n        ORDER BY \"id_mun\" DESC\r\n        `\r\n        return municipios\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getMunicipio(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const municipio = await conn`\r\n        select\r\n        *\r\n        from \"Municipio\"\r\n        where \"id_mun\" = ${id}\r\n        `\r\n        return municipio\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateMunicipio(event, id, municipio){\r\n    try{\r\n        const conn = getConnection()\r\n        const municipioAA = await conn`\r\n        UPDATE \"Municipio\"\r\n        SET \"nom_mun\" = ${municipio.name}\r\n        WHERE \"id_mun\" = ${id} \r\n        returning \"nom_mun\"\r\n        `\r\n        return municipioAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteMunicipio(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const municipio = await conn`\r\n        DELETE from \"Municipio\"\r\n        WHERE \"id_mun\" = ${id} \r\n        returning \"nom_mun\"\r\n        `\r\n        return municipio\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createMunicipio(event, municipio){\r\n    try{\r\n        const conn = getConnection()\r\n        const municipioAA = await conn`INSERT INTO \"Municipio\" (\"nom_mun\") VALUES(${municipio.name}) returning nom_mun`\r\n        console.log(municipioAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n//Modelo services\r\nasync function getModelos(){\r\n    try{\r\n        const conn = getConnection()\r\n        const modelos = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Modelo\"\r\n        ORDER BY \"id_modelo\" DESC\r\n        `\r\n        return modelos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getModelosMarca(event, id){\r\n    try{\r\n        console.log(id, typeof id)\r\n        const conn = getConnection()\r\n        const modelos = await conn`\r\n        SELECT * \r\n        FROM \"Modelo\"  \r\n        WHERE \"Modelo\".\"id_marca\" = ${id}\r\n        ORDER BY \"id_modelo\" ASC\r\n        `\r\n        return modelos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getModelo(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const modelo = await conn`\r\n        select\r\n        *\r\n        from \"Modelo\"\r\n        where \"id_modelo\" = ${id}\r\n        `\r\n        return modelo\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateModelo(event, id, modelo){\r\n    try{\r\n        const conn = getConnection()\r\n        const modeloAA = await conn`\r\n        UPDATE \"Modelo\"\r\n        SET \"nom_modelo\" = ${modelo.nom_modelo}\r\n        WHERE \"id_modelo\" = ${id} \r\n        returning \"nom_modelo\"\r\n        `\r\n        return modeloAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteModelo(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const modelo = await conn`\r\n        DELETE from \"Modelo\"\r\n        WHERE \"id_modelo\" = ${id} \r\n        returning \"nom_modelo\"\r\n        `\r\n        return modelo\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createModelo(event, modelo){\r\n    try{\r\n        const conn = getConnection()\r\n        const modeloAA = await conn`INSERT INTO \"Modelo\" (\"nom_modelo\", \"id_marca\") VALUES(${modelo.nom_modelo}, ${modelo.id_marca}) returning nom_modelo`\r\n        return modeloAA\r\n        console.log(modeloAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n//Motos services\r\nasync function getMotos(){\r\n    try{\r\n        const conn = getConnection()\r\n        const motos = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Moto\"\r\n        ORDER BY \"id_moto\" DESC\r\n        `\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getMotosDisponibles(){\r\n    try{\r\n        const conn = getConnection()\r\n        const motos = await conn`\r\n        SELECT * \r\n        FROM public.\"Moto\"\r\n        WHERE id_situa = 3\r\n        ORDER BY id_moto ASC \r\n        `\r\n\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getMoto(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const moto = await conn`\r\n        select\r\n        *\r\n        from \"Moto\"\r\n        where \"id_moto\" = ${id}\r\n        `\r\n        return moto\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateMoto(event, id, moto){\r\n    try{\r\n        const conn = getConnection()\r\n        const motoAA = await conn`\r\n        UPDATE \"Moto\"\r\n        SET \"color\" = ${moto.color}, \"km\" = ${moto.km}, \"id_situa\" = ${moto.id_situa}\r\n        \"matricula\" =  ${moto.matricula}\r\n        WHERE \"id_moto\" = ${id} \r\n        returning \"matricula\"\r\n        `\r\n        return motoAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteMoto(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const moto = await conn`\r\n        DELETE from \"Moto\"\r\n        WHERE \"id_moto\" = ${id} \r\n        returning \"matricula\"\r\n        `\r\n        return moto\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createMoto(event, moto){\r\n    try{\r\n        const conn = getConnection()\r\n        const motoAA = await conn`\r\n        INSERT INTO \"Moto\" (\"color\", \"km\",\"id_marca\", \"id_modelo\", \"id_situa\", \"matricula\")\r\n        VALUES (${moto.color}, 0, ${moto.id_marca}, ${moto.id_modelo}, 3, ${moto.matricula})`\r\n        return motoAA\r\n        console.log(motoAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n//Usuarios services\r\nasync function getUsuarios(){\r\n    try{\r\n        const conn = getConnection()\r\n        const usuarios = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Usuario\"\r\n        ORDER BY \"id_usuario\" DESC\r\n        `\r\n        return usuarios\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getUsuario(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const usuario = await conn`\r\n        select\r\n        *\r\n        from \"Usuario\"\r\n        where \"id_usuario\" = ${id}\r\n        `\r\n        return usuario\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function confirmUsuario(event, usuario){\r\n    try{\r\n        const conn = getConnection()\r\n        const usuarioAA = await conn`\r\n        select * \r\n        from \"Usuario\"\r\n        where \"nom_usuario\" = ${usuario.nom_usuario} AND \"password\" = ${usuario.password}\r\n        `\r\n        return usuarioAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateUsuario(event, id, usuario){\r\n    try{\r\n        const conn = getConnection()\r\n        const usuarioAA = await conn`\r\n        UPDATE \"Usuario\"\r\n        SET \"nom_usuario\" = ${usuario.nom_usuario}, \"edad\" = ${usuario.edad}, \"sexo\" = ${usuario.sexo},\r\n        \"num_tel\" = ${usuario.num_tel}, \"id_mun\" = ${usuario.id_mun}\r\n        WHERE \"id_usuario\" = ${id} \r\n        returning \"nom_usuario\"\r\n        `\r\n        return usuarioAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteUsuario(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const usuario = await conn`\r\n        DELETE from \"Usuario\"\r\n        WHERE \"id_usuario\" = ${id} \r\n        returning \"nom_usuario\"\r\n        `\r\n        return usuario\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createUsuario(event, usuario){\r\n    try{\r\n        console.log(usuario)\r\n        const conn = getConnection()\r\n        const usuarioAA = await conn`INSERT INTO \"Usuario\" (\"nom_usuario\", \"edad\", \"sexo\", \"num_tel\", \"id_mun\", \"id_rol\", \"password\") VALUES(${usuario.nom_usuario}, ${usuario.edad},\r\n        ${usuario.sexo}, ${usuario.num_tel}, ${usuario.id_mun}, ${usuario.id_rol} , ${usuario.password}) \r\n        RETURNING \"nom_usuario\"`\r\n        return usuarioAA\r\n        console.log(usuarioAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n//Contratos Services\r\nasync function getContratos(){\r\n    try{\r\n        const conn = getConnection()\r\n        const contratos = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"Contrato\"\r\n        ORDER BY \"id_contrato\" DESC\r\n        `\r\n        return contratos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getContrato(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const contrato = await conn`\r\n        select\r\n        *\r\n        from \"Contrato\"\r\n        where \"id_contrato\" = ${id}\r\n        `\r\n        return contrato\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateContrato(event, id, contrato){\r\n    try{\r\n        const conn = getConnection()\r\n        const contratoAA = await conn`\r\n        UPDATE \"Contrato\"\r\n        SET \"fecha_fin\" = ${contrato.fecha_fin}, \"dias_prorro\" = ${contrato.dias_prorro}, \r\n        WHERE \"id_contrato\" = ${id} \r\n        returning \"id_contrato\"\r\n        `\r\n        return contratoAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteContrato(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const contrato = await conn`\r\n        DELETE from \"Contrato\"\r\n        WHERE \"id_contrato\" = ${id} \r\n        returning \"id_contrato\"\r\n        `\r\n        return contrato\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function finalizarContrato(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const contrato = await conn`\r\n        UPDATE \"Contrato\"\r\n        SET estado='Completado'\r\n        WHERE \"id_contrato\" = ${id} \r\n        returning \"id_contrato\"\r\n        `\r\n        return contrato\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createContrato(event, contrato){\r\n    try{\r\n\r\n        console.log(contrato)\r\n        console.log(contrato.seguro)\r\n\r\n        const conn = getConnection()\r\n        const contratoAA = await conn`\r\n        INSERT INTO \"Contrato\" (\"fecha_ini\", \"fecha_fin\", \"dias_prorro\", \"seguro\", \r\n\t    \"id_formaPago\", \"id_usuario\", \"id_moto\", \"precio\")\r\n        VALUES (${contrato.fecha_ini}, ${contrato.fecha_fin}, 0, ${contrato.seguro}, \r\n        ${contrato.id_formaPago}, ${contrato.id_usuario}, ${contrato.id_moto}, ${contrato.precio})\r\n        `\r\n\r\n        return contratoAA\r\n        console.log(contratoAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n//Formas de Pago Services\r\nasync function getFormasPago(){\r\n    try{\r\n        const conn = getConnection()\r\n        const formasDePago = await conn`\r\n        SELECT\r\n        *\r\n        FROM \"FormaPago\"\r\n        ORDER BY \"id_formaPago\" DESC\r\n        `\r\n        return formasDePago\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getFormaPago(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const formaPago = await conn`\r\n        select\r\n        *\r\n        from \"FormaPago\"\r\n        where \"id_formaPago\" = ${id}\r\n        `\r\n        return formaPago\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateFormaPago(event, id, formaPago){\r\n    try{\r\n        const conn = getConnection()\r\n        const formaPagoAA = await conn`\r\n        UPDATE \"FormaPago\"\r\n        SET \"nom_formaPago\" = ${formaPago.nom_formaPago} \r\n        WHERE \"id_formaPago\" = ${id} \r\n        returning \"id_formaPago\"\r\n        `\r\n        return formaPagoAA\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function deleteFormaPago(event, id){\r\n    try{\r\n        const conn = getConnection()\r\n        const formaPago = await conn`\r\n        DELETE from \"FormaPago\"\r\n        WHERE \"id_formaPago\" = ${id} \r\n        returning \"id_formaPago\"\r\n        `\r\n        return formaPago\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function createFormaPago(event, formaPago){\r\n    try{\r\n        const conn = getConnection()\r\n        const formaPagoAA = await conn`\r\n        INSERT INTO \"FormaPago\" (\"nom_formaPago\")\r\n        VALUES (${formaPago.nom_formaPago})\r\n        `\r\n        return formaPagoAA\r\n        console.log(formaPagoAA)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getClientesResumen(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"llego aqui\")\r\n\r\n        const clientes = await conn`\r\n        SELECT * FROM obtener_resumen_clientes();\r\n        `\r\n        return clientes\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getMotosResumen(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"llego aqui\")\r\n\r\n        const motos = await conn`\r\n        SELECT * FROM obtener_resumen_motos();\r\n        `\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getContratosResumen(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"llego aqui\")\r\n\r\n        const contratos = await conn`\r\n        SELECT * FROM obtener_resumen_contratos();\r\n        `\r\n        return contratos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getSituacionMotos(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"llego aqui\")\r\n\r\n        const motos = await conn`\r\n        SELECT * FROM public.obtener_situacion_motos();\r\n        `\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getResumenMarcasModelos(){\r\n    try{\r\n        const conn = getConnection()\r\n\r\n        const motos = await conn`\r\n        SELECT * FROM public.obtener_resumen_marcas_modelos();\r\n        `\r\n        console.log(motos)\r\n\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getResumenMarcasModelosMunicipio(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"Entro aqqui\")\r\n\r\n        const motos = await conn`\r\n        SELECT * FROM obtener_resumen_marcas_modelos_municipios()\r\n        `\r\n        console.log(motos)\r\n\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getResumenAnual(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"Entro aqqui\")\r\n\r\n        const motos = await conn`\r\n        SELECT * FROM obtener_resumen_anno()\r\n        `\r\n        console.log(motos)\r\n\r\n        return motos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getContratosDeCliente(event, id_usuario){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"Entro aqqui\")\r\n\r\n        const contratos = await conn`\r\n        SELECT *, TO_CHAR(c.fecha_ini, 'DD-MM-YYYY') as \"fecha_ini\", TO_CHAR(c.fecha_fin, 'DD-MM-YYYY') as \"fecha_fin\"\r\n        FROM public.\"Contrato\" as c JOIN public.\"FormaPago\" as s ON c.\"id_formaPago\" = s.\"id_formaPago\"\r\n        WHERE c.id_usuario = ${id_usuario}\r\n        `\r\n        return contratos\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getClientesIncumplidores(){\r\n    try{\r\n        const conn = getConnection()\r\n        console.log(\"Entro aqqui\")\r\n\r\n        const clientes = await conn`\r\n        SELECT * FROM public.obtener_clientes_incumplidores()\r\n        `\r\n        return clientes\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction createWindow () {\r\n    const win = new BrowserWindow({\r\n        resizable: false,\r\n        center: true,\r\n        width: 1080,\r\n        height: 650,\r\n        title: 'MotorCicles',\r\n        icon: path.join(process.env.VITE_PUBLIC, 'favicon.ico'),\r\n        webPreferences: {\r\n            preload: path.join(__dirname, 'preload.js'),\r\n            enableRemoteModule: true\r\n        }\r\n    })\r\n    win.loadURL('http://localhost:5173')\r\n}\r\n\r\n\r\n\r\napp.whenReady().then(() => {\r\n    ipcMain.on('set-title', handleSetTitle)\r\n    ipcMain.on('print-hello', hello)\r\n    ipcMain.handle('dialog:openFile', handleFileOpen)\r\n    ipcMain.handle('get:Marcas', getMarcas)\r\n    ipcMain.handle('get:Marca', getMarca)\r\n    ipcMain.handle('update:Marca', updateMarca)\r\n    ipcMain.handle('create:Marca', createMarca)\r\n    ipcMain.handle('delete:Marca', deleteMarca)\r\n\r\n    ipcMain.handle('get:Roles', getRoles)\r\n    ipcMain.handle('get:Rol', getRol)\r\n    ipcMain.handle('update:Rol', updateRol)\r\n    ipcMain.handle('create:Rol', createRol)\r\n    ipcMain.handle('delete:Rol', deleteRol)\r\n\r\n    ipcMain.handle('get:Usuarios', getUsuarios)\r\n    ipcMain.handle('get:Usuario', getUsuario)\r\n    ipcMain.handle('confirm:Usuario', confirmUsuario)\r\n    ipcMain.handle('update:Usuario', updateUsuario)\r\n    ipcMain.handle('create:Usuario', createUsuario)\r\n    ipcMain.handle('delete:Usuario', deleteUsuario)\r\n\r\n    ipcMain.handle('get:Municipios', getMunicipios)\r\n    ipcMain.handle('get:Municipio', getMunicipio)\r\n    ipcMain.handle('update:Municipio', updateMunicipio)\r\n    ipcMain.handle('create:Municipio', createMunicipio)\r\n    ipcMain.handle('delete:Municipio', deleteMunicipio)\r\n\r\n    ipcMain.handle('get:Modelos', getModelos)\r\n    ipcMain.handle('get:ModelosMarca', getModelosMarca)\r\n    ipcMain.handle('get:Modelo', getModelo)\r\n    ipcMain.handle('update:Modelo', updateModelo)\r\n    ipcMain.handle('create:Modelo', createModelo)\r\n    ipcMain.handle('delete:Modelo', deleteModelo)\r\n\r\n    ipcMain.handle('get:Motos', getMotos)\r\n    ipcMain.handle('get:MotosDisponibles', getMotosDisponibles)\r\n    ipcMain.handle('get:Moto', getMoto)\r\n    ipcMain.handle('update:Moto', updateMoto)\r\n    ipcMain.handle('create:Moto', createMoto)\r\n    ipcMain.handle('delete:Moto', deleteMoto)\r\n\r\n    ipcMain.handle('get:Contratos', getContratos)\r\n    ipcMain.handle('get:ContratosDeCliente', getContratosDeCliente)\r\n    ipcMain.handle('get:Contrato', getContrato)\r\n    ipcMain.handle('update:Contrato', updateContrato)\r\n    ipcMain.handle('create:Contrato', createContrato)\r\n    ipcMain.handle('delete:Contrato', deleteContrato)\r\n    ipcMain.handle('finalizar:Contrato', finalizarContrato)\r\n\r\n    ipcMain.handle('get:FormasPago', getFormasPago)\r\n    ipcMain.handle('get:FormaPago', getFormaPago)\r\n    ipcMain.handle('update:FormaPago', updateFormaPago)\r\n    ipcMain.handle('create:FormaPago', createFormaPago)\r\n    ipcMain.handle('delete:FormaPago', deleteFormaPago)\r\n\r\n    ipcMain.handle('get:ClientesResumen', getClientesResumen)\r\n    ipcMain.handle('get:MotosResumen', getMotosResumen)\r\n    ipcMain.handle('get:ContratosResumen', getContratosResumen)\r\n    ipcMain.handle('get:SituacionMotos', getSituacionMotos)\r\n    ipcMain.handle('get:ClientesIncumplidores', getClientesIncumplidores)\r\n    ipcMain.handle('get:ResumenMarcasModelos', getResumenMarcasModelos)\r\n    ipcMain.handle('get:ResumenMarcasModelosMunicipio', getResumenMarcasModelosMunicipio)\r\n    ipcMain.handle('get:ResumenAnual', getResumenAnual)\r\n    // ipcMain.handle('say:hello', sayHello)\r\n    // ipcMain.on('say:hello', sayHello)\r\n\r\n    createWindow()\r\n\r\n    app.on('activate', () => {\r\n        if (BrowserWindow.getAllWindows().length === 0) {\r\n            createWindow()\r\n        }\r\n    })\r\n})\r\n\r\napp.on('window-all-closed', () => {\r\n    if (process.platform !== 'darwin') {\r\n        app.quit()\r\n    }\r\n})\r\n"],"names":[],"mappings":"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"}